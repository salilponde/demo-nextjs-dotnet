trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: DotNetCoreCLI@2
  displayName: 'Publish WebApi'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/WebApi.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)/WebApi'
    zipAfterPublish: true
    modifyOutputPath: true
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish WebApi Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/WebApi'
    ArtifactName: 'WebApi'
    publishLocation: 'Container'
    
- task: DotNetCoreCLI@2
  displayName: 'Publish QueueRequestFunction'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/QueueRequestFunction.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)/QueueRequestFunction'
    zipAfterPublish: true
    modifyOutputPath: true
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish QueueRequestFunction Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/QueueRequestFunction'
    ArtifactName: 'QueueRequestFunction'
    publishLocation: 'Container'    

- task: DotNetCoreCLI@2
  displayName: 'Publish ProcessRequestFunction'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/ProcessRequestFunction.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)/ProcessRequestFunction'
    zipAfterPublish: true
    modifyOutputPath: true
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish ProcessRequestFunction Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/ProcessRequestFunction'
    ArtifactName: 'ProcessRequestFunction'
    publishLocation: 'Container'   
    
- task: Bash@3
  displayName: 'Build Frontend'
  inputs:
    targetType: 'inline'
    script: |
      npm install
      npm run build
      mkdir -p $(Build.SourcesDirectory)/frontend/.next/standalone/.next/static
      cp -r $(Build.SourcesDirectory)/frontend/.next/static/* $(Build.SourcesDirectory)/frontend/.next/standalone/.next/static
    workingDirectory: 'frontend'
    
- task: ArchiveFiles@2
  displayName: 'Archive Frontend'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/frontend/.next/standalone'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/frontend.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Frontend Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/frontend.zip'
    ArtifactName: 'frontend'
    publishLocation: 'Container'
    